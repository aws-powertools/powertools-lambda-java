[
  {
    "name": "com.amazonaws.services.lambda.runtime.Context",
    "allDeclaredClasses": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Comparable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Double",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.Number",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.ProcessEnvironment",
    "fields": [{ "name": "theCaseInsensitiveEnvironment" }, { "name": "theEnvironment" }]
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.constant.ConstantDesc",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.Collections$UnmodifiableMap",
    "fields": [{ "name": "m" }]
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [{ "name": "value" }]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [{ "name": "value" }]
  },
  {
    "name": "java.util.function.Consumer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apiguardian.api.API",
    "queryAllPublicMethods": true
  },
  {
    "name": "software.amazon.cloudwatchlogs.emf.model.Metadata",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "getCloudWatchMetrics", "parameterTypes": [] },
      { "name": "getCustomMetadata", "parameterTypes": [] },
      { "name": "getTimestamp", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.cloudwatchlogs.emf.model.MetricDefinition",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "getName", "parameterTypes": [] },
      { "name": "getStorageResolution", "parameterTypes": [] },
      { "name": "getUnit", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.cloudwatchlogs.emf.model.MetricDirective",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "getAllDimensionKeys", "parameterTypes": [] },
      { "name": "getAllMetrics", "parameterTypes": [] },
      { "name": "getNamespace", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.cloudwatchlogs.emf.model.RootNode",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "getAws", "parameterTypes": [] },
      { "name": "getTargetMembers", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.cloudwatchlogs.emf.serializers.InstantSerializer",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "software.amazon.cloudwatchlogs.emf.serializers.StorageResolutionFilter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "software.amazon.cloudwatchlogs.emf.serializers.StorageResolutionSerializer",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "software.amazon.cloudwatchlogs.emf.serializers.UnitSerializer",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "software.amazon.lambda.powertools.common.internal.LambdaHandlerProcessor",
    "fields": [{ "name": "IS_COLD_START" }],
    "methods": [{ "name": "resetServiceName", "parameterTypes": [] }]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.ConfigurationPrecedenceTest",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "annotationShouldOverrideBuilderAndEnvironment", "parameterTypes": [] },
      { "name": "builderShouldOverrideEnvironment", "parameterTypes": [] },
      { "name": "environmentVariablesShouldBeUsedWhenNoOverrides", "parameterTypes": [] },
      { "name": "setUp", "parameterTypes": [] },
      { "name": "shouldUseDefaultsWhenNoConfiguration", "parameterTypes": [] },
      { "name": "tearDown", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.ConfigurationPrecedenceTest$HandlerWithDefaultMetricsAnnotation",
    "methods": [
      { "name": "handleRequest", "parameterTypes": ["java.util.Map", "com.amazonaws.services.lambda.runtime.Context"] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.ConfigurationPrecedenceTest$HandlerWithMetricsAnnotation",
    "methods": [
      { "name": "handleRequest", "parameterTypes": ["java.util.Map", "com.amazonaws.services.lambda.runtime.Context"] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.MetricsLogger",
    "allDeclaredClasses": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.MetricsLoggerBuilderTest",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "setUp", "parameterTypes": [] },
      { "name": "shouldBuildWithCustomMetricsProvider", "parameterTypes": [] },
      { "name": "shouldBuildWithCustomNamespace", "parameterTypes": [] },
      { "name": "shouldBuildWithCustomService", "parameterTypes": [] },
      { "name": "shouldBuildWithDefaultDimension", "parameterTypes": [] },
      { "name": "shouldBuildWithMultipleDefaultDimensions", "parameterTypes": [] },
      { "name": "shouldBuildWithRaiseOnEmptyMetrics", "parameterTypes": [] },
      { "name": "shouldOverrideServiceWithDefaultDimensions", "parameterTypes": [] },
      { "name": "tearDown", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.MetricsLoggerFactory",
    "fields": [{ "name": "metricsLogger" }, { "name": "provider" }]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.MetricsLoggerFactoryTest",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "setUp", "parameterTypes": [] },
      { "name": "shouldGetMetricsLoggerInstance", "parameterTypes": [] },
      { "name": "shouldReturnSameInstanceOnMultipleCalls", "parameterTypes": [] },
      { "name": "shouldSetCustomMetricsProvider", "parameterTypes": [] },
      { "name": "shouldThrowExceptionWhenSettingNullProvider", "parameterTypes": [] },
      { "name": "shouldUseNamespaceFromEnvironmentVariable", "parameterTypes": [] },
      { "name": "shouldUseServiceNameFromEnvironmentVariable", "parameterTypes": [] },
      { "name": "tearDown", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.internal.EmfMetricsLogger",
    "methods": [
      { "name": "convertUnit", "parameterTypes": ["software.amazon.lambda.powertools.metrics.model.MetricUnit"] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.internal.EmfMetricsLoggerTest",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "setUp", "parameterTypes": [] },
      { "name": "shouldAddDimension", "parameterTypes": [] },
      { "name": "shouldAddMetadata", "parameterTypes": [] },
      { "name": "shouldCaptureColdStartMetric", "parameterTypes": [] },
      { "name": "shouldCaptureColdStartMetricWithDimensions", "parameterTypes": [] },
      { "name": "shouldCaptureColdStartMetricWithoutDimensions", "parameterTypes": [] },
      { "name": "shouldClearDefaultDimensions", "parameterTypes": [] },
      {
        "name": "shouldConvertMetricUnits",
        "parameterTypes": [
          "software.amazon.lambda.powertools.metrics.model.MetricUnit",
          "software.amazon.cloudwatchlogs.emf.model.Unit"
        ]
      },
      { "name": "shouldCreateMetricWithDefaultResolution", "parameterTypes": [] },
      { "name": "shouldCreateMetricWithHighResolution", "parameterTypes": [] },
      { "name": "shouldGetDefaultDimensions", "parameterTypes": [] },
      { "name": "shouldPushSingleMetric", "parameterTypes": [] },
      { "name": "shouldPushSingleMetricWithoutDimensions", "parameterTypes": [] },
      { "name": "shouldRaiseExceptionOnEmptyMetrics", "parameterTypes": [] },
      { "name": "shouldReuseNamespaceForColdStartMetric", "parameterTypes": [] },
      { "name": "shouldSetDefaultDimensions", "parameterTypes": [] },
      { "name": "shouldSetNamespace", "parameterTypes": [] },
      { "name": "tearDown", "parameterTypes": [] },
      { "name": "unitConversionTestCases", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.internal.LambdaMetricsAspectTest",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "setUp", "parameterTypes": [] },
      { "name": "shouldCaptureColdStartMetricWhenConfigured", "parameterTypes": [] },
      { "name": "shouldCaptureMetricsFromAnnotatedHandler", "parameterTypes": [] },
      { "name": "shouldHaveNoEffectOnNonHandlerMethod", "parameterTypes": [] },
      { "name": "shouldOverrideEnvironmentVariablesWithAnnotation", "parameterTypes": [] },
      { "name": "shouldUseCustomFunctionNameWhenProvidedForColdStartMetric", "parameterTypes": [] },
      { "name": "shouldUseEnvironmentVariablesWhenNoAnnotationOverrides", "parameterTypes": [] },
      { "name": "shouldUseServiceNameWhenProvidedForColdStartMetric", "parameterTypes": [] },
      { "name": "tearDown", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.internal.LambdaMetricsAspectTest$HandlerWithAnnotationOnWrongMethod",
    "methods": [{ "name": "someOtherMethod", "parameterTypes": [] }]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.internal.LambdaMetricsAspectTest$HandlerWithColdStartMetricsAnnotation",
    "methods": [
      { "name": "handleRequest", "parameterTypes": ["java.util.Map", "com.amazonaws.services.lambda.runtime.Context"] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.internal.LambdaMetricsAspectTest$HandlerWithCustomFunctionName",
    "methods": [
      { "name": "handleRequest", "parameterTypes": ["java.util.Map", "com.amazonaws.services.lambda.runtime.Context"] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.internal.LambdaMetricsAspectTest$HandlerWithDefaultMetricsAnnotation",
    "methods": [
      { "name": "handleRequest", "parameterTypes": ["java.util.Map", "com.amazonaws.services.lambda.runtime.Context"] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.internal.LambdaMetricsAspectTest$HandlerWithMetricsAnnotation",
    "methods": [
      { "name": "handleRequest", "parameterTypes": ["java.util.Map", "com.amazonaws.services.lambda.runtime.Context"] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.internal.LambdaMetricsAspectTest$HandlerWithServiceNameAndColdStart",
    "methods": [
      { "name": "handleRequest", "parameterTypes": ["java.util.Map", "com.amazonaws.services.lambda.runtime.Context"] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.model.DimensionSetTest",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "shouldCreateDimensionSetFromMap", "parameterTypes": [] },
      { "name": "shouldCreateDimensionSetWithFiveKeyValues", "parameterTypes": [] },
      { "name": "shouldCreateDimensionSetWithFourKeyValues", "parameterTypes": [] },
      { "name": "shouldCreateDimensionSetWithSingleKeyValue", "parameterTypes": [] },
      { "name": "shouldCreateDimensionSetWithThreeKeyValues", "parameterTypes": [] },
      { "name": "shouldCreateDimensionSetWithTwoKeyValues", "parameterTypes": [] },
      { "name": "shouldCreateEmptyDimensionSet", "parameterTypes": [] },
      { "name": "shouldGetDimensionValue", "parameterTypes": [] },
      { "name": "shouldReturnNullForNonExistentDimension", "parameterTypes": [] },
      { "name": "shouldThrowExceptionWhenExceedingMaxDimensions", "parameterTypes": [] },
      { "name": "shouldThrowExceptionWhenKeyIsEmpty", "parameterTypes": [] },
      { "name": "shouldThrowExceptionWhenKeyIsNull", "parameterTypes": [] },
      { "name": "shouldThrowExceptionWhenValueIsNull", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.provider.EmfMetricsProviderTest",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "shouldCreateEmfMetricsLogger", "parameterTypes": [] }
    ]
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.provider.MetricsProvider",
    "allDeclaredClasses": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.testutils.TestContext",
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.testutils.TestMetricsLogger",
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "software.amazon.lambda.powertools.metrics.testutils.TestMetricsProvider",
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  }
]
