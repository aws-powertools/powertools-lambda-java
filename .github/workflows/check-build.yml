# Check Build
#
# Description:
#   Runs the build for every java version we support
#
# Triggers:
#   - pull_request:Â when a PR is sent to us
#   - push: when code is pushed to a specified branch
#
# Notes:
#   Builds against Java 11, 17, and 21 which are the supported versions.

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'powertools-batch/**'
      - 'powertools-core/**'
      - 'powertools-cloudformation/**'
      - 'powertools-common/**'
      - 'powertools-e2e-tests/**'
      - 'powertools-idempotency/**'
      - 'powertools-large-messages/**'
      - 'powertools-logging/**'
      - 'powertools-metrics/**'
      - 'powertools-kafka/**'
      - 'powertools-parameters/**'
      - 'powertools-serialization/**'
      - 'powertools-sqs/**'
      - 'powertools-tracing/**'
      - 'powertools-tracing/**'
      - 'powertools-validation/**'
      - 'examples/**'
      - 'pom.xml'
      - 'examples/pom.xml'
      - '.github/workflows/**'
  push:
    branches:
      - main
    paths:
      - 'powertools-batch/**'
      - 'powertools-core/**'
      - 'powertools-cloudformation/**'
      - 'powertools-common/**'
      - 'powertools-e2e-tests/**'
      - 'powertools-idempotency/**'
      - 'powertools-large-messages/**'
      - 'powertools-logging/**'
      - 'powertools-metrics/**'
      - 'powertools-parameters/**'
      - 'powertools-serialization/**'
      - 'powertools-sqs/**'
      - 'powertools-tracing/**'
      - 'powertools-tracing/**'
      - 'powertools-validation/**'
      - 'pom.xml'
      - 'examples/**'
      - 'examples/pom.xml'
      - '.github/workflows/**'

name: Build
permissions:
  contents: read
run-name: Build - ${{ github.event_name }}

jobs:
  java-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java:
          - 11
          - 17
          - 21
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        with:
          distribution: corretto
          java-version: ${{ matrix.java }}
          cache: maven
      - id: build-maven
        name: Build (Maven)
        run: |
          mvn -B -q install --file pom.xml

  graalvm-build:
    runs-on: aws-powertools_ubuntu-latest_8-core
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47.0.0
        with:
          files: |
            powertools-*/**
            pom.xml
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@2a2412009026a83f51d179f92dc2b3fd4c8142df # v1.4.1
        with:
          java-version: "21"
          distribution: "graalvm"
          cache: maven
      - id: graalvm-native-test
        name: GraalVM Native Test
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          # Build the entire project first to ensure test-jar dependencies are available
          echo "::group::Building project dependencies"
          mvn -B -q install -DskipTests
          echo "::endgroup::"
          
          echo "Changes detected in powertools modules: $CHANGED_FILES"
          
          # Find modules with graalvm-native profile and run tests
          find . -name "pom.xml" -path "./powertools-*" | while read module; do
            if grep -q "<id>graalvm-native</id>" "$module"; then
              module_dir=$(dirname "$module")
              module_name=$(basename "$module_dir")
              
              # Check if this specific module or common dependencies changed
              if echo "$CHANGED_FILES" | grep -q "$module_name/" || \
                 echo " $CHANGED_FILES " | grep -q " pom.xml " || \
                 echo "$CHANGED_FILES" | grep -q "powertools-common/"; then
                echo "::group::Building $module_name with GraalVM"
                echo "Changes detected in $module_name - running GraalVM tests"
                echo "Regenerating GraalVM metadata for $module_dir"
                mvn -B -q -f "$module" -Pgenerate-graalvm-files clean test
                echo "Running GraalVM native tests for $module_dir"
                mvn -B -q -f "$module" -Pgraalvm-native test
                echo "::endgroup::"
              else
                echo "No changes detected in $module_name - skipping GraalVM tests"
              fi
            fi
          done
