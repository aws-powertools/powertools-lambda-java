on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Semver version to release
      snapshot:
        type: boolean
        description: Create snapshot release
        default: true
      skip_checks: 
        type: boolean
        description: Skip quality checks
        default: false
      skip_publish:
        type: boolean
        description: Ship publish to Maven Central
        default: false
      conintue_on_error: 
        type: boolean
        description: 
        default: false

name: Release
run-name: Release

permissions: 
  contents: read

env:
  RELEASE_COMMIT: ${{ github.sha }}
  RELEASE_TAG_VERSION: ${{ inputs.version }}

jobs:
  process_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ format('{0}{1}', steps.version_release.outputs.version, steps.version_snapshot.outputs.version) }}
    steps:
      - id: version_snapshot
        if: ${{ inputs.snapshot }}
        name: Version
        run: |
          echo version="$(grep -q "SNAPSHOT" <<< "${{ inputs.version }}" && echo "${{ inputs.version }}" || echo "${{ inputs.version }}-SNAPSHOT")" >> "$GITHUB_OUTPUT"
      - id: version_release
        if: ${{ !inputs.snapshot }}
        name: Version
        run: |
          echo version="${{ inputs.version }}" >> "$GITHUB_OUTPUT"

  version_seal:
    runs-on: ubuntu-latest
    needs:
      - process_version
    outputs:
      source_hash: ${{ steps.upload_source.outputs.artifact-digest }}
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - id: version
        name: version
        uses: ./.github/actions/version
        with:
          new_version: ${{ needs.process_version.outputs.version }}
          snapshot: ${{ inputs.snapshot}}
      - id: upload_source
        name: Upload artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          if-no-files-found: error
          name: source
          path: |
            *
            !.git/*
          include-hidden-files: true
          retention-days: 1

  quality:
    runs-on: ubuntu-latest
    needs: 
      - version_seal
    permissions:
      contents: write
      id-token: write
    steps:
      - id: download_source
        name: Download artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.6.1
        with:
          name: source
      - name: Setup Java
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12
        with:
          distribution: corretto
          java-version: 21
          cache: maven
      # non-exhuastive, but gives a fair indication if the final build will succeed, tests will run when we build later
      - name: Run unit tests
        run: mvn -B test --file pom.xml
        continue-on-error: ${{ inputs.conintue_on_error }}
      - name: Run Spotbugs
        run: mvn -Pbuild-with-spotbugs -B install --file pom.xml -DskipTests -Dmaven.javadoc.skip=true -Dspotbugs.failOnError=${{ !inputs.conintue_on_error }} 
        continue-on-error: ${{ inputs.conintue_on_error }}
      - uses: pmd/pmd-github-action@d9c1f3c5940cbf5923f1354e83fa858b4496ebaa # v2.0.0
        with:
          rulesets: '.github/pmd-ruleset.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
          uploadSarifReport: false

  build:
    runs-on: ubuntu-latest
    needs:
      - quality
      - version_seal
    strategy:
      matrix:
        java_version:
          - 8
          - 11
          - 17
          - 21
    steps:
      - id: download_source
        name: Download artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.6.1
        with:
          name: source
      - name: Setup Java
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12
        with:
          distribution: corretto
          java-version: ${{ matrix.java_version }}
          cache: maven
      - id: build-maven
        name: Build (Maven)
        run: |
          mvn -B install --file pom.xml

  publish:
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'aws-powertools/powertools-lambda-java' }}
    needs:
      - build
    environment: Release
    steps:
      - id: download_source
        name: Download artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.6.1
        with:
          name: source
      - name: Setup Java
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12
        with:
          distribution: corretto
          java-version: 21
          cache: maven
      - name: Publish package
        run: mvn -Prelease clean deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_JIRA_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_JIRA_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  
  create_pr:
    runs-on: ubuntu-latest
    if: ${{ inputs.snapshot == false }}
    needs:
      - build
    permissions:
      pull-requests: write
      contents: write
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env.RELEASE_COMMIT }}
      - id: download_source
        name: Download artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.6.1
        with:
          name: source
      - id: setup-git
        name: Git client setup and refresh tip
        run: |
          git config user.name "Powertools for AWS Lambda (Java) Bot"
          git config user.email "151832416+aws-powertools-bot@users.noreply.github.com"
          git config pull.rebase true
          git config remote.origin.url >&-
      - id: branch
        name: Create branch
        run: |
          git checkout -b ci-${{ github.run_id }}
          git commit -am "chore(ci): bump version to ${{ inputs.version }}"
          git push origin ci-${{ github.run_id }}
      - id: create_pr
        name: Create PR
        run: |
          gh pr create \
            --title "chore(ci): bump version to ${{ inputs.version }}" \
            --body "This is an automated PR created from the following workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: tag
        name: Create release
        run: |
          gh release create v${{ inputs.version }} --target $(git rev-parse HEAD)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}